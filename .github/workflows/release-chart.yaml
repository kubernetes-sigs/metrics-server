name: Release Chart

on:
  push:
    branches:
      - release-*
    paths:
      - charts/metrics-server/Chart.yaml

permissions:
  contents: read

jobs:
  release:
    name: Release
    if: github.repository == 'kubernetes-sigs/metrics-server'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get chart version
        id: chart_version
        uses: mikefarah/yq@f03c9dc599c37bfcaf533427211d05e51e6fee64 # v4.47.1
        with:
          cmd: yq eval '.version' './charts/metrics-server/Chart.yaml'

      - name: Get chart app version
        id: chart_app_version
        uses: mikefarah/yq@f03c9dc599c37bfcaf533427211d05e51e6fee64 # v4.47.1
        with:
          cmd: yq eval '.appVersion' './charts/metrics-server/Chart.yaml'

      - name: Check can release
        id: check_can_release
        run: |
          set -euo pipefail

          branch_name="${GITHUB_REF##*/}"
          app_version_prefix="${branch_name##*-}"

          app_version_regex="^${app_version_prefix//./\.}"

          chart_version_match="$(echo "${{ steps.chart_version.outputs.result }}" | grep -Po "^\d+\.\d+\.\d+$" || true)"
          app_version_match="$(echo "${{ steps.chart_app_version.outputs.result }}" | grep -Po "^${app_version_prefix//./\.}" || true)"

          if [[ -z "${chart_version_match}" ]] || [[ -z "${app_version_match}" ]]
          then
            echo "continue=false" >> $GITHUB_OUTPUT
          else
            echo "continue=true" >> $GITHUB_OUTPUT
          fi

      - name: Set-up Helm
        if: steps.check_can_release.outputs.continue == 'true'
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: latest

      - name: Get CHANGELOG entry
        id: changelog_reader
        if: steps.check_can_release.outputs.continue == 'true'
        uses: mindsers/changelog-reader-action@32aa5b4c155d76c94e4ec883a223c947b2f02656 # v2.2.3
        with:
          path: charts/metrics-server/CHANGELOG.md
          version: ${{ steps.chart_version.outputs.result }}

      - name: Create release notes
        if: steps.check_can_release.outputs.continue == 'true'
        run: |
          set -euo pipefail
          cat <<"EOF" > charts/metrics-server/RELEASE.md
          ${{ steps.changelog_reader.outputs.changes }}
          EOF

      - name: Run chart-releaser
        if: steps.check_can_release.outputs.continue == 'true'
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: "metrics-server-helm-chart-{{ .Version }}"
          CR_RELEASE_NOTES_FILE: RELEASE.md
          CR_MAKE_RELEASE_LATEST: false
